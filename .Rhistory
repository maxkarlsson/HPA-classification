mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(seq(1, length(genes), 3), length(genes),
FUN = function(i, jmax) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 2)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
print(p)
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 2)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 2)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 8)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
genes <- unique(all_atlas_cat$ensg_id)
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 2)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 15)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 10)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 15),
strip.text.x = element_text(size = 15)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 10)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 15),
strip.text.y = element_text(size = 15)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
dev.off()
dev.off()
dev.off()
dev.off()
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 4)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 15),
strip.text.y = element_text(size = 15)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
"a"
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 5)+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 15),
strip.text.y = element_text(size = 15)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
genes <- unique(all_atlas_cat$ensg_id)
print_gene_bar_pdf(genes, "Alla gener.pdf")
print_gene_bar_pdf <- function(genes, savename) {
pdf(paste(result_folder, savename, sep = "/"), width = 32, height = 8)
plot.col <- with(tissue_colors, setNames(c(color, color, elevated.cat.cols), c(tissue_name, organ_name, names(elevated.cat.cols))))
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
plot.data <-
all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
gather(key = "Type", value = "Value", X, NX, TMM) %>%
select(consensus_content_name, content_name, ensg_id, method, Type, Value, express.category.2, elevated.category) %>%
rbind(left_join(all_atlas_cat  %>%
filter(!imputed) %>%
filter(method != "Blood") %>%
select(consensus_content_name, content_name, ensg_id, express.category.2, elevated.category),
all.atlas.max %>%
select(consensus_content_name, ensg_id,
expression_maxEx,
dstmm.zero.expression_maxEx,
limma_gene_dstmm.zero.impute.expression_maxEx) %>%
rename(X = expression_maxEx,
TMM = dstmm.zero.expression_maxEx,
NX = limma_gene_dstmm.zero.impute.expression_maxEx) %>%
mutate(method = "consensus"),
by = c("ensg_id", "consensus_content_name")) %>%
gather(key = "Type", value = "Value", X, NX, TMM)) %>%
mutate(Type = factor(Type, levels = c("X", "TMM", "NGX", "NX", "consensus")),
content_name = factor(content_name,
levels = select(., content_name, consensus_content_name) %>%
unique() %$% content_name[order(consensus_content_name)]),
label = paste(express.category.2,
elevated.category, sep = "\n"),
label = ifelse(Type == "X" & method == "HPA", label, NA)#,consensus_Value = ifelse(Type == "NX", consensus_Value, NA)
)
p <-
plot.data %>%
{lapply(1:length(genes),
FUN = function(i) {
setTimerProgressBar(pb, i)
filter(., ensg_id %in% genes[i]) %>%
ggplot(aes(content_name, Value, fill = consensus_content_name))+
geom_hline(yintercept = 1:3, color = "red", linetype = "dashed")+
geom_bar(stat = "identity", show.legend = F, size = 0.5, color = "black", position = "dodge")+
geom_text(aes(5, 1, label = label), vjust = -1, hjust = 0, size = 5)+
ggtitle(genes[i])+
simple_theme+
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.8),
strip.text.x = element_text(size = 15),
strip.text.y = element_text(size = 15)) +
scale_fill_manual(values = plot.col)+#dataset.colors)+
facet_grid(method ~ Type)
})}
pb <- timerProgressBar(min = 1, max = length(genes))
on.exit(close(pb))
for(i in 1:length(genes)){
setTimerProgressBar(pb, i)
print(p[[i]])
}
dev.off()
}
print_gene_bar_pdf(AsaGener, "Åsas gener.pdf")
