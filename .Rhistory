`enriched tissues` = enhanced_tissues) %>%
mutate(elevated.category = tolower(elevated.category),
category = case_when(elevated.category == 'not detected' ~ 1,
elevated.category == 'tissue enriched' ~ 2,
elevated.category == 'group enriched' ~ 3,
elevated.category == 'tissue enhanced' ~ 4,
elevated.category == 'low tissue specificity' ~ 5),
express.category.2 = gsub("detected", "expressed", express.category.2))
bloodlineage.atlas.category <-
read_delim(category_blood_lineage_path, delim = "\t") %>%
rename(elevated.category = specificity_category,
express.category.2 = distribution_category,
`enriched tissues` = enhanced_tissues) %>%
mutate(elevated.category = tolower(elevated.category),
category = case_when(elevated.category == 'not detected' ~ 1,
elevated.category == 'tissue enriched' ~ 2,
elevated.category == 'group enriched' ~ 3,
elevated.category == 'tissue enhanced' ~ 4,
elevated.category == 'low tissue specificity' ~ 5),
express.category.2 = gsub("detected", "expressed", express.category.2))
cellline.atlas.category <-
read_delim(category_cellline_path, delim = "\t") %>%
rename(elevated.category = specificity_category,
express.category.2 = distribution_category,
`enriched tissues` = enhanced_tissues) %>%
mutate(elevated.category = tolower(elevated.category),
category = case_when(elevated.category == 'not detected' ~ 1,
elevated.category == 'tissue enriched' ~ 2,
elevated.category == 'group enriched' ~ 3,
elevated.category == 'tissue enhanced' ~ 4,
elevated.category == 'low tissue specificity' ~ 5),
express.category.2 = gsub("detected", "expressed", express.category.2))
readr::write_delim(blood.atlas.category, path = paste(result_folder, paste0('gene_categories_blood_cells.txt'),sep='/'), delim = "\t")
# calculate brain categories
# Add a test function: Compare LIMS and our classification
all.atlas.category %>%
group_by(elevated.category, express.category.2) %>%
summarise(n = length(elevated.category)) %>%
spread(key = express.category.2, value = n) %>%
readr::write_delim(paste(result_folder, paste0('gene_categories_summarized.txt'),sep='/'), delim = "\t")
for(celltype in unique(blood.atlas.max$consensus_content_name)) {
blood.atlas.category %>%
filter(mapply(paste0("(^|, )", celltype, "(, |$)"),
`enriched tissues`, FUN = function(x,y) grepl(x, y))) %>%
write_csv(paste(result_folder, paste0(celltype, "_elevated_genes.csv"),sep='/'))
}
#
# ----------- Step 5. Cytoscape files -----------
#
#
# blood.atlas.category.cytoscape.nodes <-
#   blood.atlas.category %>%
#   group_by(elevated.category, `enriched tissues`) %>%
#   summarise(n = length(ensg_id)) %>%
#   ungroup() %>%
#   mutate(node_id = 1:nrow(.))
#
# first <- T
# for(content_name in unique(blood.atlas$content_name)) {
#   temp <-
#     blood.atlas.category.cytoscape.nodes %>%
#     filter(grepl(paste0("(^|,)", content_name, "(,|$)"), `enriched tissues`)) %>%
#     mutate(content_name = content_name,
#            edge = 1)
#
#   if(first){
#     blood.atlas.category.cytoscape.nodes.full <- temp
#
#     first <- F
#   } else {
#     blood.atlas.category.cytoscape.nodes.full <-
#       rbind(blood.atlas.category.cytoscape.nodes.full, temp)
#   }
#
#
# }
#
# blood.atlas.category.cytoscape.nodes.full %>%
#   left_join(blood_atlas_hierarchy %>%
#               filter(!content %in% c("blood", "Total PBMCs")) %>%
#               {.[with(., order(content_l3, content_l2, content_l1, content)),]} %>%
#               mutate(circle_order_1 = 1:nrow(.),
#                      circle_order_2 = 1:nrow(.),
#                      content_name = content),
#             by = "content_name") %>%
#   filter(n > 2 & elevated.category %in% c("group enriched", "tissue enriched")) %>%
#   write_delim(paste(result_folder, paste0('gene_categories_blood_cells_summarised.txt'),sep='/'), delim = "\t")
#
# ----------- Brain atlas classification -----------
#
#
brain.atlas <-
all.atlas %>%
filter(!method=='HPA') %>%
filter(consensus_content_name == "brain")
#
# brain.atlas <-
#   brain.atlas %>%
#   left_join(brainregions.table, by=c("content_name" = "tissue.type" ,"consensus_content_name" = "group"))
#
# ## overlap genes in all tissues
# brain.genelist <-
#   brain.atlas %>%
#   group_by(ensg_id) %>%
#   summarise(n = length(content_name)) %>%
#   filter(n == 53) %>%
#   select(ensg_id) %>%
#   as.matrix()
#
# brain.atlas.filter <-
#   brain.atlas[brain.atlas$ensg_id %in% brain.genelist,]
#
#
# brain.atlas.max <-
#   brain.atlas.filter %>%
#   group_by(subgroup, ensg_id) %>%
#   filter(!is.na(limma_gene_dstmm.zero.impute.expression)) %>%
#   dplyr::summarise(limma_gene_dstmm.zero.impute.expression_maxEx = max(limma_gene_dstmm.zero.impute.expression))
#
# brain.atlas.max_all_regions <-
#   brain.atlas.filter %>%
#   group_by(content_name, ensg_id) %>%
#   filter(!is.na(limma_gene_dstmm.zero.impute.expression)) %>%
#   dplyr::summarise(limma_gene_dstmm.zero.impute.expression_maxEx = max(limma_gene_dstmm.zero.impute.expression))
#
# write.table(brain.atlas.max,
#             file=paste(result_folder, paste0('consensus_brain_regions.txt'),sep='/'),
#             row.names = F,
#             sep='\t',
#             quote=F)
#
# brain.atlas.category <- get.categories.with.num.expressed(brain.atlas.max,
#                                                           max_column = "limma_gene_dstmm.zero.impute.expression_maxEx",
#                                                           cat_column = "subgroup",
#                                                           enrich.fold = 4,
#                                                           group.num = 6)
#
# brain.atlas.category_all_regions <-
#   get.categories.with.num.expressed(brain.atlas.max_all_regions,
#                                     max_column = "limma_gene_dstmm.zero.impute.expression_maxEx",
#                                     cat_column = "content_name",
#                                     enrich.fold = 4,
#                                     group.num = 6)
# write.table(brain.atlas.category,
#             file=paste(result_folder, paste0('gene_categories_brain_regions.txt'),sep='/'),
#             row.names = F,
#             sep='\t',
#             quote=F)
#
# # print number of different categories of genes
# table(brain.atlas.category$category.text)
#
# ----------- Visulization -----------
#
atlas = blood.atlas
atlas.max = blood.atlas.max
atlas.cat = blood.atlas.category
sample.atlas = blood.samples
sample_Ex_column = "ptpm"
Ex_column = "nx"
maxEx_column = "nx"
sample_content_column = "tissue"
content_column = "content_name"
consensus_content_column = "consensus_content_name"
content_hierarchy = blood_atlas_hierarchy
content_colors = with(blood_atlas_colors, setNames(color, content))
method_column = "method"
plots = plots
plot.atlas = "blood"
# plot.order = blood_atlas_hierarchy %>%
#   filter(!content %in% c("blood", "Total PBMCs")) %$%
#   content[order(content_l2, content_l1)]
plot.order = c('basophil', 'eosinophil', 'neutrophil',
'classical monocyte', 'non-classical monocyte', 'intermediate monocyte',
'T-reg', 'gdTCR', 'MAIT T-cell', 'memory CD4 T-cell',
'naive CD4 T-cell', 'memory CD8 T-cell', 'naive CD8 T-cell',
'memory B-cell', 'naive B-cell',
'plasmacytoid DC', 'myeloid DC',
'NK-cell', 'total PBMC')
subatlas_unit = "celltype"
FACS_markers = blood_atlas_FACS_markers
outpath = result_folder
prefix = "blood_cells"
global.atlas = all.atlas
global.atlas.max = all.atlas.max
global.atlas.category = all.atlas.category
global_maxEx_column = "nx"
atlas.max.wide <- generate_wide(atlas.max,
ensg_column = 'ensg_id',
group_column = consensus_content_column,
max_column = maxEx_column)
atlas.elevated.table <- calc_elevated.table(tb.wide = atlas.max.wide,
atlas.categories = atlas.cat)
atlas.elevated.summary.table <- calc_elevated.summary.table(atlas.elevated.table)
global.atlas.max.wide <- generate_wide(global.atlas.max,
ensg_column = 'ensg_id',
group_column = consensus_content_column,
max_column = global_maxEx_column)
global.atlas.elevated.table <- calc_elevated.table(tb.wide = global.atlas.max.wide,
atlas.categories = global.atlas.category)
global.atlas.elevated.summary.table <- calc_elevated.summary.table(global.atlas.elevated.table)
heatmap_palette = viridis::inferno(20, direction = -1)
global_elevated_table_2 <- calc_elevated.table2(global.atlas.max.wide, global.atlas.category)
plot_data <-
global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content", value = "class", -ensg_id) %>%
filter(class != "") %>%
group_by(class, content) %>%
summarise(n = length(ensg_id)) %>%
ungroup() %>%
mutate(class = factor(class, levels = c("tissue enhanced","group enriched","tissue enriched"))) %>% {
lev <-
group_by(., content) %>%
summarise(n = sum(n)) %$%
content[order(n)]
mutate(.,
content = factor(content, levels = lev))}
levels(plot_data$content)
plot_data %>%
ggplot(aes(content, n, fill = class))+
geom_bar(stat = "identity") +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
xlab("")+
ylab("Number of genes")+
theme(axis.text.y = element_text(hjust = 0.5),
legend.position = c(0.55, 0.7))
plot_maxtpm <-
global.atlas %>%
inner_join(global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content_name", value = "elevated_category_", -1) %>%
filter(elevated_category_ != ""),
by = c("ensg_id", "content_name"))
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method) +
ylab("pTPM")
plot_maxtpm
plot_maxtpm <-
bind_rows(global.atlas %>%
select(ensg_id, content_name, ptpm, method, elevated_category_),
global.atlas %>%
group_by(ensg_id, content_name, elevated_category_) %>%
summarise(ptpm = median(ptpm, na.rm = T)) %>%
mutate(method = "Median")) %>%
inner_join(global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content_name", value = "elevated_category_", -1) %>%
filter(elevated_category_ != ""),
by = c("ensg_id", "content_name"))
global.atlas %>%
group_by(ensg_id, content_name, elevated_category_)
plot_maxtpm <-
bind_rows(global.atlas %>%
select(ensg_id, content_name, ptpm, method, elevated_category_),
global.atlas %>%
group_by(ensg_id, content_name, elevated_category_) %>%
summarise(ptpm = median(ptpm, na.rm = T)) %>%
mutate(method = "Median")) %>%
inner_join(global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content_name", value = "elevated_category_", -1) %>%
filter(elevated_category_ != ""),
by = c("ensg_id", "content_name"))
global.atlas %>%
select(ensg_id, content_name, ptpm, method, elevated_category_)
global.atlas
plot_maxtpm <-
bind_rows(global.atlas %>%
select(ensg_id, content_name, ptpm, method),
global.atlas %>%
group_by(ensg_id, content_name) %>%
summarise(ptpm = median(ptpm, na.rm = T)) %>%
mutate(method = "Median")) %>%
inner_join(global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content_name", value = "elevated_category_", -1) %>%
filter(elevated_category_ != ""),
by = c("ensg_id", "content_name"))
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method) +
ylab("pTPM")
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method, nrow = 4) +
ylab("pTPM")
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method, nrow = 1) +
ylab("pTPM")
plot_data
global.atlas.max
plot_maxtpm <-
global.atlas.max %>%
inner_join(global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "consensus_content_name", value = "elevated_category_", -1) %>%
filter(elevated_category_ != ""),
by = c("ensg_id", "consensus_content_name"))
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(consensus_content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
consensus_content_name = factor(consensus_content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(consensus_content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method, nrow = 1) +
ylab("pTPM")
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(consensus_content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
consensus_content_name = factor(consensus_content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(consensus_content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
ylab("pTPM")
plot_maxtpm
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(consensus_content_name, elevated.category) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
consensus_content_name = factor(consensus_content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(consensus_content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
ylab("pTPM")
ggsave(paste(outpath, "consensus pTPM per elevated class.pdf", sep = "/"), width=7, height=7, useDingbats = F)
global_elevated_table_2 <- calc_elevated.table2(global.atlas.max.wide, global.atlas.category)
plot_data <-
global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content", value = "class", -ensg_id) %>%
filter(class != "") %>%
group_by(class, content) %>%
summarise(n = length(ensg_id)) %>%
ungroup() %>%
mutate(class = factor(class, levels = c("tissue enhanced","group enriched","tissue enriched"))) %>% {
lev <-
group_by(., content) %>%
summarise(n = sum(n)) %$%
content[order(n)]
mutate(.,
content = factor(content, levels = lev))}
levels(plot_data$content)
plot_data %>%
ggplot(aes(content, n, fill = class))+
geom_bar(stat = "identity") +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
xlab("")+
ylab("Number of genes")+
theme(axis.text.y = element_text(hjust = 0.5),
legend.position = c(0.55, 0.7))
plot_maxtpm <-
bind_rows(global.atlas %>%
select(ensg_id, content_name, ptpm, method),
global.atlas %>%
group_by(ensg_id, content_name) %>%
summarise(ptpm = median(ptpm, na.rm = T)) %>%
mutate(method = "Median")) %>%
inner_join(global_elevated_table_2 %>%
as.tibble(rownames = "ensg_id") %>%
gather(key = "content_name", value = "elevated_category_", -1) %>%
filter(elevated_category_ != ""),
by = c("ensg_id", "content_name"))
ggsave(paste(outpath, "consensus number genes per elevated class.pdf", sep = "/"), width=7, height=7, useDingbats = F)
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method, nrow = 1) +
ylab("pTPM")
ggsave(paste(outpath, "pTPM per elevated class.pdf", sep = "/"), width=7, height=7, useDingbats = F)
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method, nrow = 1) +
ylab("pTPM")
ggsave(paste(outpath, "pTPM per elevated class.pdf", sep = "/"), width=16, height=7, useDingbats = F)
plot_maxtpm %>%
left_join(global.atlas.category,
by = "ensg_id") %>%
group_by(content_name, elevated.category, method) %>%
summarise(sum_pTPM = sum(ptpm, na.rm = T)) %>%
ungroup() %>%
mutate(elevated.category = factor(elevated.category, levels = c("tissue enhanced","group enriched","tissue enriched")),
content_name = factor(content_name, levels = levels(plot_data$content))) %>%
ggplot(aes(content_name, sum_pTPM, fill = elevated.category)) +
geom_col() +
scale_fill_manual(name = "",values = elevated.cat.cols)+
scale_y_continuous(expand = c(0.025, 0, 0.05, 0))+
stripped_theme+
coord_flip()+
facet_wrap(~ method, nrow = 1) +
ylab("pTPM")
global.atlas
global.atlas %>% filter(content_name == "salivary gland" & method == "FANTOM")
global.atlas %>% filter(content_name == "salivary gland" & method == "FANTOM") %>% summarise(sum(ptpm))
global.atlas %>% filter(content_name == "salivary gland" & method == "FANTOM") %>% summarise(sum(tpm))
global.atlas %>% filter(content_name == "salivary gland" & method == "FANTOM") %>% summarise(sum(ptpm))
global.atlas %>% filter(content_name == "salivary gland" & method == "FANTOM") %>% summarise(sum(tmm))
global.atlas %>% filter(method == "FANTOM") %>% group_by(content_name) %>% summarise(sumptpm = sum(ptpm))
global.atlas %>% group_by(content_name, method) %>% summarise(sumptpm = sum(ptpm))
global.atlas %>% group_by(content_name, method) %>% summarise(sumptpm = sum(ptpm)) %>% ggplot(aes(content_name, sumptpm, fill = method))+geom_col()
global.atlas %>% group_by(content_name, method) %>% summarise(sumptpm = sum(ptpm)) %>% ggplot(aes(content_name, sumptpm, fill = method))+geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
global.atlas %>% group_by(content_name, method) %>% summarise(sumptpm = sum(tpm)) %>% ggplot(aes(content_name, sumptpm, fill = method))+geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
global.atlas %>% group_by(content_name, method) %>% summarise(sumptpm = sum(ptpm)) %>% ggplot(aes(content_name, sumptpm, fill = method))+geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(paste(outpath, "sum ptpm per method.pdf", sep = "/"), width=16, height=7, useDingbats = F)
hpa_norm_path
gtex_norm_path
global.atlas.elevated.summary.table
table(global.atlas.category$`enriched tissues`)
table(global.atlas.category$`enriched tissues`)[1:10]
global.atlas.category %>% filter(`enriched tissues` == "adipose tissue")
global.atlas.category %>% filter(`enriched tissues` == "adipose tissue") %>% View
global.atlas %>% group_by(content_name, method) %>% summarise(sumptpm = sum(ptpm)) %>% filter(content_name == "salivary gland") %>% ggplot(aes(content_name, sumptpm, fill = method))+geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
