ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5)
sim_data_2 %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5)
sim_data_2 %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
sim_data_2 <-
sim_data %>%
mutate(counts = c(10000000, counts[2:length(counts)]),
TPM = counts / (sum(counts) / 1e6))
sim_data_2 %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
sim_data_2 %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
sim_data <-
tibble(counts = c(rchisq(10000, 2)),
sample = rep(c("A", "B"), each = 5000)) %>%
group_by(sample) %>%
mutate(counts = range_scale(counts, c(0, 500000)),
counts = ifelse(sample == "A", counts, counts * 1.8),
TPM = counts / (sum(counts) / 1e6)) %>%
ungroup()
sim_data %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
sim_data %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
sim_data_2 <-
sim_data %>%
mutate(counts = c(10000000, counts[2:length(counts)]),
TPM = counts / (sum(counts) / 1e6))
sim_data_2 %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
sim_data_2 %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
a <-
sim_data %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
b <-
sim_data %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
c <- sim_data_2 %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
d <-
sim_data_2 %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
grid.arrange(a, b, c, d, nrow = 2)
sim_data_2 <-
sim_data %>%
mutate(counts = c(100000000, counts[2:length(counts)]),
TPM = counts / (sum(counts) / 1e6))
c <- sim_data_2 %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
d <-
sim_data_2 %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
grid.arrange(a, b, c, d, nrow = 2)
sim_data_2
sim_data_2 <-
sim_data %>%
mutate(counts = c(10000000, counts[2:length(counts)]),
TPM = counts / (sum(counts) / 1e6))
c <- sim_data_2 %>%
ggplot(aes(sample, counts)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
d <-
sim_data_2 %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
scale_y_log10()
grid.arrange(a, b, c, d, nrow = 2)
sim_data
bind_rows(sim_data %>%
mutate(type = "1"),
sim_data_2 %>%
mutate(type = "2"))
bind_rows(sim_data %>%
mutate(type = "1"),
sim_data_2 %>%
mutate(type = "2")) %>%
gather(key = "metric", value = "value", -2, -4)
bind_rows(sim_data %>%
mutate(type = "1"),
sim_data_2 %>%
mutate(type = "2")) %>%
gather(key = "metric", value = "value", -2, -4) %>%
ggplot(aes(sample, TPM)) +
geom_violin(draw_quantiles = 0.5) +
facet_grid(type ~ metric)+
scale_y_log10()
bind_rows(sim_data %>%
mutate(type = "1"),
sim_data_2 %>%
mutate(type = "2")) %>%
gather(key = "metric", value = "value", -2, -4) %>%
ggplot(aes(sample, value)) +
geom_violin(draw_quantiles = 0.5) +
facet_grid(type ~ metric)+
scale_y_log10()
bind_rows(sim_data %>%
mutate(type = "1"),
sim_data_2 %>%
mutate(type = "2")) %>%
gather(key = "metric", value = "value", -2, -4) %>%
ggplot(aes(sample, value)) +
geom_violin(draw_quantiles = 0.5) +
facet_grid(type ~ metric, scales = "free")+
scale_y_log10()
bind_rows(sim_data %>%
mutate(type = "1"),
sim_data_2 %>%
mutate(type = "2")) %>%
gather(key = "metric", value = "value", -2, -4) %>%
ggplot(aes(sample, value)) +
geom_violin(draw_quantiles = 0.5) +
facet_wrap(type ~ metric, scales = "free")+
scale_y_log10()
bind_rows(sim_data %>%
mutate(type = "original"),
sim_data_2 %>%
mutate(type = "Added one highly expressed gene")) %>%
gather(key = "metric", value = "value", -2, -4) %>%
ggplot(aes(sample, value)) +
geom_violin(draw_quantiles = 0.5) +
facet_wrap(type ~ metric, scales = "free")+
scale_y_log10()
bind_rows(sim_data %>%
mutate(type = "1: Original"),
sim_data_2 %>%
mutate(type = "2: One highly expressed gene")) %>%
gather(key = "metric", value = "value", -2, -4) %>%
ggplot(aes(sample, value)) +
geom_violin(draw_quantiles = 0.5) +
facet_wrap(type ~ metric, scales = "free")+
scale_y_log10()
ggsave(paste(result_folder, "TPM problem example.pdf",sep='/'), width=10, height=10)
scatter_plots <- lapply(limz, FUN = function(lim) n_det_p_tissue %>%
filter(near(det_limit, lim)) %>%
select(2:3) %>%
mutate(type = "nx") %>%
bind_rows(ptpm_n_det_p_tissue %>%
mutate(type = "ptpm")) %>%
spread(key = type, value = n_under) %>%
{ggplot(., aes(ptpm, nx, color = consensus_content_name, label = consensus_content_name)) +
geom_text(nudge_y = 200,
show.legend = F, size = 1.5)+
geom_point(show.legend = F) +
scale_x_continuous(limits = c(1000, 9000)) +
scale_y_continuous(limits = c(1000, 9000)) +
stripped_theme+
scale_color_manual(values = tissue.colors)+
annotate(geom = "segment",
y = 1000,
yend = 9000,
x = 1000,
xend = 9000)})
pdf(paste(result_folder, "different cutoffs det effect.pdf",sep='/'), width=10, height=4)
lapply(1:length(limz), FUN = function(i) grid.arrange(total_bar_plots[[i]],
bar_plots[[i]],
scatter_plots[[i]],
nrow = 1,
top = paste("cutoff NX =", limz[i]),
widths = c(0.2, 0.5, 0.3)))
dev.off()
all.atlas.max
all_cats_df
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id")
plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
filter(elevated.category == "not detected")
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
filter(elevated.category == "not detected")
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
filter(elevated.category.y == "not detected")
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1])
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>%{
ggplot(., aes(consensus_content_name, max_nx, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("New: ", unique(paste(.$kategori, .$distribution, sep = " - ")), "\n",
"Old: ", unique(paste(.$elevated.category, .$express.category.2, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>%{
ggplot(., aes(consensus_content_name, max_nx, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>%{
ggplot(., aes(consensus_content_name, max_nx, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4))
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>%{
ggplot(., aes(consensus_content_name, max_nx, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
ggplot(., aes(consensus_content_name, value, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1])
#plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>%{
ggplot(., aes(consensus_content_name, value, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>% {
lapply(plot_genes$gen,
FUN = function(x) {
filter(., ensg_id == x) %>% {
ggplot(., aes(consensus_content_name, value, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
})
}
plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") %>%
filter(ensg_id == ensg_id[1]) %>% {
lapply(plot_genes$gen,
FUN = function(x) {
filter(., ensg_id == x) %>% {
ggplot(., aes(consensus_content_name, value, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
})
}
pdf(paste(result_folder, "TPM problem example.pdf",sep='/'), width = 8, height = 6)
plots
dev.off()
plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") %>% {
lapply(plot_genes$gen,
FUN = function(x) {
filter(., ensg_id == x) %>% {
ggplot(., aes(consensus_content_name, value, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
})
}
pdf(paste(result_folder, "new detected genes.pdf",sep='/'), width = 8, height = 6)
plots
dev.off()
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") -> .
.
plots <-
all.atlas.max %>%
select(1:4) %>%
left_join(all_cats_df %>%
filter(det_limit == 0.3), by = "ensg_id") %>%
left_join(all_cats_df %>%
filter(det_limit == 1), by = "ensg_id") %>%
gather(key = "type", value = "value", (3:4)) %>%
mutate(type = factor(gsub("max_", "", type), levels = c("ptpm", "nx"))) %>%
filter(elevated.category.y == "not detected") %>% {
lapply(unique(.$ensg_id),
FUN = function(x) {
filter(., ensg_id == x) %>% {
ggplot(., aes(consensus_content_name, value, fill = consensus_content_name)) +
geom_hline(yintercept = c(0.3, 1),
linetype = "dashed") +
geom_bar(stat = "identity",
show.legend = F) +
facet_wrap(~ type, ncol = 2) +
scale_fill_manual(values = tissue.colors) +
ggtitle(x, subtitle = paste0("NX 0.3: ", unique(paste(.$elevated.category.x, .$express.category.2.x, sep = " - ")), "\n",
"NX 1.0: ", unique(paste(.$elevated.category.y, .$express.category.2.y, sep = " - "))))+
simple_theme +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.title = element_blank(),
strip.background =  element_rect(fill = NA, colour = NA),
strip.text =        element_text(size = 8, face = "bold",hjust = 0.5, vjust = 0.9))
}
})
}
pdf(paste(result_folder, "new detected genes.pdf",sep='/'), width = 8, height = 6)
plots
dev.off()
